section.sermon-results(v-if="ui.view === 'sermon-results'")

  .inner
    h2(v-if="my.isStreetPreaching") Your street preaching is complete for the day.
    h2(v-else) Your preaching is complete for the day.

    // Street Preaching Results
    .audience-reactions(v-if="my.isStreetPreaching && my.audienceReactions && my.audienceReactions.length > 0")
      h3 Audience Reactions
      table.debug.audience-changes
        thead
          tr
            th Religion
            th üëÇ
            th üòÅ
            th üò†
        tbody
          tr(v-for="reaction in sortedAudienceReactions.filter(r => r.liked > 0 || r.disliked > 0)" :class="{'positive': reaction.liked > reaction.disliked, 'negative': reaction.disliked > reaction.liked}")
            td 
              span.religion-name {{reaction.name}}
            td.number {{reaction.liked + reaction.disliked + reaction.neutral}}
            td.number
              span.positive(v-if="reaction.liked > 0") {{reaction.liked}}
              span(v-else) 0
            td.number
              span.negative(v-if="reaction.disliked > 0") {{reaction.disliked}}
              span(v-else) 0
          tr.summary(v-if="totalIgnoredAudience > 0")
            td(colspan="4")
              em {{totalIgnoredAudience}} other people ignored your sermon.

    // Church Preaching Results  
    table.debug.follower-changes(v-if="!my.isStreetPreaching")
      //caption Follower Changes
      thead
        tr
          th(v-if="gameSettings.isDebug") id
          //th
          th name
          th(v-if="gameSettings.isDebug") before
          th change
          th(v-if="gameSettings.isDebug") after
      tbody
        tr(v-for="religion in my.followerChanges" :class="{'positive': religion.change > 0, 'negative': religion.change < 0}")
          td(v-if="gameSettings.isDebug") {{religion.id}}
          //td 
            span.positive(v-if="religion.change > 0") ‚¨ÜÔ∏è
            span.negative(v-else-if="religion.change < 0") ‚¨áÔ∏è
          td 
            span.religion-name {{religion.name}}
          td.number(v-if="gameSettings.isDebug") {{religion.before}}
          td.number
            span.positive(v-if="religion.change > 0") {{"+"+religion.change}}
            span.negative(v-else-if="religion.change < 0") {{religion.change}}
          td.number(v-if="gameSettings.isDebug") {{religion.after}}

    dl.donations-collected
      dt 
        span Donations Collected:
      dd {{dollars(my.donationsYesterday)}}

    .spice-purchase
      h3 Purchase Spice
      p.consumption-note <strong>Note:</strong> All spice purchased today will be consumed immediately.
      .spice-status
        p Current Money: {{dollars(my.money)}}
        p Spice Required: {{Math.ceil(my.spice.requiredAmount)}} units
        p Spice Price: {{dollars(gameSettings.spice.pricePerUnit)}} per unit
        p Already Consumed Today: {{my.spice.consumedToday}} units
        p.warning(v-if="my.spice.consumedToday < my.spice.requiredAmount") ‚ö†Ô∏è You need {{Math.ceil(my.spice.requiredAmount - my.spice.consumedToday)}} more units to avoid penalties!
        p.good(v-if="my.spice.consumedToday >= my.spice.requiredAmount") ‚úÖ Requirement met ({{Math.ceil(my.spice.consumedToday - my.spice.requiredAmount)}} excess)
        p.warning(v-if="my.spice.consumedToday >= my.spice.fatalAmount * 0.8") ‚ò†Ô∏è WARNING: High spice consumption is dangerous!
      
      .purchase-controls
        label How much spice to consume?
        input(type="number" v-model.number="spiceToBuy" min="0" :max="Math.floor(my.money / gameSettings.spice.pricePerUnit)")
        span units ({{dollars(spiceToBuy * gameSettings.spice.pricePerUnit)}})
        button.buy-spice(@click="consumeSpice(spiceToBuy); spiceToBuy = 0" :disabled="spiceToBuy <= 0 || my.money < spiceToBuy * gameSettings.spice.pricePerUnit") Consume Spice
      
      .quick-purchase
        button.recommended(@click="spiceToBuy = Math.max(0, Math.ceil(my.spice.requiredAmount - my.spice.consumedToday))" :disabled="my.money < Math.max(0, Math.ceil(my.spice.requiredAmount - my.spice.consumedToday)) * gameSettings.spice.pricePerUnit") Meet Requirement
        button.safe(@click="spiceToBuy = Math.max(0, Math.ceil(my.spice.requiredAmount - my.spice.consumedToday) + 1)" :disabled="my.money < Math.max(0, Math.ceil(my.spice.requiredAmount - my.spice.consumedToday) + 1) * gameSettings.spice.pricePerUnit") +1 Extra
        button.danger(@click="spiceToBuy = Math.floor(my.money / gameSettings.spice.pricePerUnit)" :disabled="my.money < gameSettings.spice.pricePerUnit") Buy Maximum

    .buttons
      button.reset(v-if="gameSettings.isDebug" @click="collectDonations()") GET PAID ü§ë
      button.submit(@click="advanceToNextDay()") Next Day.

    
    table.debug(v-if="gameSettings.isDebug") 
      caption Followers
      thead
        tr
          th id
          th name
          th followers
      tbody
        tr(v-for="religion in my.followers.slice().sort((a, b) => b.followers - a.followers)")
          td {{religion.id}}
          td {{religion.name}}
          td {{religion.followers}}

    table.debug(v-if="gameSettings.isDebug")
      thead
        tr
          th id
          th name
          th score
      tbody
        tr(v-for="religion in my.religiousScorecard.slice().sort((a, b) => b.score - a.score)")
          td {{religion.id}}
          td {{religion.name}}
          td {{religion.score}}